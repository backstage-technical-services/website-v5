name: Build

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
  push:
    branches: [ main ]

defaults:
  run:
    shell: bash

env:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false'

jobs:
  # UI
  ui-typing:
    name: UI - Check Types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: yarn --cwd ui install --frozen-lockfile
      - run: yarn --cwd ui check:types

  ui-lint:
    name: UI - Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: yarn --cwd ui install --frozen-lockfile
      - run: yarn --cwd ui check:lint

  ui-tests:
    name: UI - Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: yarn --cwd ui install --frozen-lockfile
      - run: yarn --cwd ui test:unit:ci
      - uses: actions/upload-artifact@v4
        with:
          name: ui-coverage
          path: ui/coverage/unit/

  # API
  api-lint:
    name: API - Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - run: ./gradlew detekt
        working-directory: api

  api-tests:
    name: API - Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - run: ./gradlew test
        working-directory: api
      - uses: actions/upload-artifact@v4
        with:
          name: api-coverage
          path: api/build/reports/jacoco/test/

  # E2E
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    env:
      AUTH0_USERNAME: ${{ secrets.AUTH0_USERNAME }}
      AUTH0_PASSWORD: ${{ secrets.AUTH0_PASSWORD }}
      CYPRESS_COVERAGE: true
      OIDC_SERVER_URL: ${{ secrets.OIDC_SERVER_URL }}
      OIDC_CLIENT_ID: ${{ secrets.OIDC_CLIENT_ID }}
      OIDC_CLIENT_SECRET: ${{ secrets.OIDC_CLIENT_SECRET }}
      QUARKUS_PROFILE: e2e
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Process the import sql file
        run: |
          envsubst \
            < api/src/main/resources/import-e2e.tmpl.sql \
            > api/src/main/resources/import-e2e.sql
      - name: Start the API
        run: |
          pushd api && ./gradlew assemble && popd
          docker compose up \
              --detach \
              --build \
              --force-recreate \
              api
          scripts/wait_until_healthy.sh "backstage-api"
      - if: ${{ failure() }}
        name: Export container logs
        run: docker compose logs api
      - uses: cypress-io/github-action@v6
        with:
          working-directory: ui
          build: yarn build
          command: yarn test:e2e:ci
      - uses: actions/upload-artifact@v4
        with:
          name: e2e-coverage
          path: ui/coverage/e2e/
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ui/cypress/screenshots
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos
          path: ui/cypress/videos
          if-no-files-found: ignore

  # SonarCloud
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs:
      - ui-tests
      - api-tests
      - e2e-tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: yarn --cwd ui install --frozen-lockfile
      - uses: actions/download-artifact@v4
        with:
          name: api-coverage
          path: coverage/api
      - uses: actions/download-artifact@v4
        with:
          name: ui-coverage
          path: coverage/ui
# See: https://github.com/cypress-io/code-coverage/issues/782
#      - uses: actions/download-artifact@v4
#        with:
#          name: e2e-coverage
#          path: coverage/e2e
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
