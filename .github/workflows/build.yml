name: Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

defaults:
  run:
    shell: bash

env:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false'

jobs:
  # UI
  ui-typing:
    name: UI - Check Types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: yarn --cwd ui install --frozen-lockfile
      - run: yarn --cwd ui check:types

  ui-lint:
    name: UI - Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: yarn --cwd ui install --frozen-lockfile
      - run: yarn --cwd ui check:lint

  ui-unit-tests:
    name: UI - Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: yarn --cwd ui install --frozen-lockfile
      - run: yarn --cwd ui test:unit:ci

  # API
  api-lint:
    name: API - Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - run: ./gradlew detekt
        working-directory: api

  api-test:
    name: API - Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - run: ./gradlew test
        working-directory: api

  # E2E
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Start the API
        run: |
          ./gradlew assemble
          docker compose up \
            --detach \
            --build \
            --force-recreate \
            api
        working-directory: api
      - run: scripts/wait_until_healthy.sh "backstage-api"
      - uses: cypress-io/github-action@v6
        with:
          working-directory: ui
          build: yarn build
          command: yarn test:e2e:ci
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ui/cypress/screenshots
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos
          path: ui/cypress/videos
          if-no-files-found: ignore
